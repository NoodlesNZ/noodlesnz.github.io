"use strict";(self.webpackChunknoodles=self.webpackChunknoodles||[]).push([[2948],{175:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var a=t(5893),o=t(1151);const r={slug:"double-byte-and-php-unicode-problems",title:"Double byte and PHP (unicode problems)"},s=void 0,c={permalink:"/blog/double-byte-and-php-unicode-problems",source:"@site/blog/2006-11-02-double-byte-and-php-unicode-problems.mdx",title:"Double byte and PHP (unicode problems)",description:"A while back I ran into a problem with PHP, how can I read in files that have double byte (unicode) characters and display them in a form that any browser can read. Most programming languages don't handle these characters very well, and end up with non sense instead of passing through the correct text. [&hellip;]",date:"2006-11-02T00:00:00.000Z",formattedDate:"November 2, 2006",tags:[],readingTime:.81,hasTruncateMarker:!0,authors:[],frontMatter:{slug:"double-byte-and-php-unicode-problems",title:"Double byte and PHP (unicode problems)"},unlisted:!1,prevItem:{title:"MySQL and Redhat Enterprise Linux 4",permalink:"/blog/mysql-and-redhat-enterprise-linux-4"},nextItem:{title:"Google datacenter check",permalink:"/blog/google-datacenter-check"}},i={authorsImageUrls:[]},d=[];function l(e){const n={code:"code",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("p",{children:"A while back I ran into a problem with PHP, how can I read in files that have double byte (unicode) characters and display them in a form that any browser can read. Most programming languages don't handle these characters very well, and end up with non sense instead of passing through the correct text. [\u2026]"}),"\n",(0,a.jsx)(n.p,{children:"A while back I ran into a problem with PHP, how can I read in files that have double byte (unicode) characters and display them in a form that any browser can read. Most programming languages don't handle these characters very well, and end up with non sense instead of passing through the correct text."}),"\n",(0,a.jsx)(n.p,{children:"This function should be able to strip out any unicode characters from text and return them as html entities (something none of the core PHP functions are able to do)."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'function removeuni($content){\npreg_match_all("/[\\x{90}-\\x{3000}]/u", $content, $matches);  \n\nforeach($matches[0] as $match){\n$content = str_replace($match, mb_convert_encoding($match, "HTML-ENTITIES","UTF-8&#8243;), $content);\n}  \n\nreturn $content;\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>s});var a=t(7294);const o={},r=a.createContext(o);function s(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);