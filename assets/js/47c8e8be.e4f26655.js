"use strict";(self.webpackChunknoodles=self.webpackChunknoodles||[]).push([[7693],{246:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var o=r(4848),t=r(8453);const s={title:"Running Akamai Sandbox in Docker with HTTPS"},i=void 0,a={permalink:"/blog/2018/10/12/running-akamai-sandbox-in-docker-with-https",source:"@site/blog/2018-10-12-running-akamai-sandbox-in-docker-with-https.mdx",title:"Running Akamai Sandbox in Docker with HTTPS",description:"Akamai's new Sandbox can be run on local development environments, so you can test changes in development with production like CDN settings. This allows you to more quickly identify issues before rolling out to production.",date:"2018-10-12T00:00:00.000Z",formattedDate:"October 12, 2018",tags:[],readingTime:2.215,hasTruncateMarker:!0,authors:[],frontMatter:{title:"Running Akamai Sandbox in Docker with HTTPS"},unlisted:!1,prevItem:{title:"Fixing Twig deprecations in Symfony 4.4",permalink:"/blog/2019/11/27/fixing-twig-deprecations-in-symfony-4-4"},nextItem:{title:"ipv6 workaround for Unifi USG on 2 Degrees UFB",permalink:"/blog/2018/09/20/ipv6-workaround-for-unifi-usg-on-2-degrees-ufb"}},c={authorsImageUrls:[]},l=[];function d(e){const n={a:"a",code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Akamai's new Sandbox can be run on local development environments, so you can test changes in development with production like CDN settings. This allows you to more quickly identify issues before rolling out to production."}),"\n","\n",(0,o.jsxs)(n.p,{children:["The Akamai sandbox (or DevPoPs) is a Java app (see ",(0,o.jsx)(n.a,{href:"https://bit.ly/aka-sb-gh",children:"https://bit.ly/aka-sb-gh"}),"). This Java app can be containerised for portability/ease of setup and use."]}),"\n",(0,o.jsxs)(n.p,{children:["I created a simple docker compose setup (",(0,o.jsx)(n.a,{href:"https://github.com/NoodlesNZ/devpops-test",children:"https://github.com/NoodlesNZ/devpops-test"}),")."]}),"\n",(0,o.jsx)(n.p,{children:"This can be used with a real certificate (which is signed by a CA), but works as well with a self signed certificate using (on a Mac):"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"openssl req \\\r\n    -newkey rsa:2048 \\\r\n    -x509 \\\r\n    -nodes \\\r\n    -keyout server.key \\\r\n    -new \\\r\n    -out server.crt \\\r\n    -subj /CN=www.example.com \\\r\n    -reqexts SAN \\\r\n    -extensions SAN \\\r\n    -config <(cat /System/Library/OpenSSL/openssl.cnf \\\r\n        <(printf '[SAN]\\nsubjectAltName=DNS:www.example.com')) \\\r\n    -sha256 \\\r\n    -days 3650\n"})}),"\n",(0,o.jsx)(n.p,{children:"This is included in the conf/config.json file:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'{\r\n  "connectorServerInfo": {\r\n    "secure": true,\r\n    "port": 443,\r\n    "host": "0.0.0.0",\r\n    "cert": {\r\n      "certChainPath": "./conf/server.crt",\r\n      "keyPath": "./conf/server.key"\r\n    }\r\n  },\r\n  "originMappings": [\r\n    {\r\n      "from": "<ORIGIN HOST>",\r\n      "to": {\r\n        "secure": true,\r\n        "port": 8443,\r\n        "host": "host.docker.internal"\r\n      }\r\n    }\r\n  ],\r\n  "jwt": "<ENTER JWT HERE>"\r\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"Explaining a few options in the config.json file."}),"\n",(0,o.jsx)(n.p,{children:"In the connectorServerInfo section:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"secure: true - enables https"}),"\n",(0,o.jsx)(n.li,{children:"port: 443 - listens on port 443"}),"\n",(0,o.jsx)(n.li,{children:"host: 0.0.0.0 - bind to all ip addresses (needed for docker as binding to 127.0.0.1 doesn't work)"}),"\n",(0,o.jsx)(n.li,{children:"cert - public/private key as generated with openssl"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"In the originMappings section:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["from: ",(0,o.jsx)(n.code,{children:"<ORIGIN HOST>"})," - the origin hostname in your Akamai property, e.g. origin.example.com"]}),"\n",(0,o.jsx)(n.li,{children:"to - the local/development origin"}),"\n",(0,o.jsx)(n.li,{children:"secure: true - enabled https on the new origin"}),"\n",(0,o.jsx)(n.li,{children:"port: 8443 - As the Sandbox is now listening on port 443, the origin needs to be on a different port"}),"\n",(0,o.jsx)(n.li,{children:"host: host.docker.internal - special docker hostname on mac, which resolves to the host's ip address. This assumes that your dev server is also hosted on your mac."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"This setup can also be incorporated into an existing docker compose setup, e.g."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"version: '2'\r\nservices:\r\n  web:\r\n    image: example/web:latest\r\n    networks:\r\n      - appnet\r\n  devpops:\r\n    image: noodlesnz/devpops:latest\r\n    volumes:\r\n      - ./conf:/opt/devpops/conf\r\n    ports:\r\n      - 443:443\r\n    networks:\r\n      - appnet\r\nnetworks:\r\n  appnet:\r\n    driver: \"bridge\"\n"})}),"\n",(0,o.jsx)(n.p,{children:'With web and devpops sharing the same docker network, you can use the host "web" with your config.json, e.g.'}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'{\r\n  "connectorServerInfo": {\r\n    "secure": true,\r\n    "port": 443,\r\n    "host": "0.0.0.0",\r\n    "cert": {\r\n      "certChainPath": "./conf/server.crt",\r\n      "keyPath": "./conf/server.key"\r\n    }\r\n  },\r\n  "originMappings": [\r\n    {\r\n      "from": "<ORIGIN HOST>",\r\n      "to": {\r\n        "secure": true,\r\n        "port": 443,\r\n        "host": "web"\r\n      }\r\n    }\r\n  ],\r\n  "jwt": "<ENTER JWT HERE>"\r\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"This also means that the development origin can only be accessed through the Akamai Sandbox, as web doesn't have any ports exposed."})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>a});var o=r(6540);const t={},s=o.createContext(t);function i(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);