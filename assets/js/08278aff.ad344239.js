"use strict";(self.webpackChunknoodles=self.webpackChunknoodles||[]).push([[2948],{175:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var a=n(5893),o=n(1151);const r={title:"Double byte and PHP (unicode problems)"},c=void 0,s={permalink:"/blog/2006/11/02/double-byte-and-php-unicode-problems",source:"@site/blog/2006-11-02-double-byte-and-php-unicode-problems.mdx",title:"Double byte and PHP (unicode problems)",description:"A while back I ran into a problem with PHP, how can I read in files that have double byte (unicode) characters and display them in a form that any browser can read. Most programming languages don't handle these characters very well, and end up with non sense instead of passing through the correct text. [&hellip;]",date:"2006-11-02T00:00:00.000Z",formattedDate:"November 2, 2006",tags:[],readingTime:.81,hasTruncateMarker:!0,authors:[],frontMatter:{title:"Double byte and PHP (unicode problems)"},unlisted:!1,prevItem:{title:"MySQL and Redhat Enterprise Linux 4",permalink:"/blog/2006/12/01/mysql-and-redhat-enterprise-linux-4"},nextItem:{title:"Google datacenter check",permalink:"/blog/2006/11/02/google-datacenter-check"}},i={authorsImageUrls:[]},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("p",{children:"A while back I ran into a problem with PHP, how can I read in files that have double byte (unicode) characters and display them in a form that any browser can read. Most programming languages don't handle these characters very well, and end up with non sense instead of passing through the correct text. [\u2026]"}),"\n",(0,a.jsx)(t.p,{children:"A while back I ran into a problem with PHP, how can I read in files that have double byte (unicode) characters and display them in a form that any browser can read. Most programming languages don't handle these characters very well, and end up with non sense instead of passing through the correct text."}),"\n",(0,a.jsx)(t.p,{children:"This function should be able to strip out any unicode characters from text and return them as html entities (something none of the core PHP functions are able to do)."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:'function removeuni($content){\npreg_match_all("/[\\x{90}-\\x{3000}]/u", $content, $matches);  \n\nforeach($matches[0] as $match){\n$content = str_replace($match, mb_convert_encoding($match, "HTML-ENTITIES","UTF-8&#8243;), $content);\n}  \n\nreturn $content;\n}\n'})})]})}function h(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>c});var a=n(7294);const o={},r=a.createContext(o);function c(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);