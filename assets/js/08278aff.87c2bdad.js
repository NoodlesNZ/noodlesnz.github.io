"use strict";(self.webpackChunknoodles=self.webpackChunknoodles||[]).push([[2523],{313:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>h,frontMatter:()=>c,metadata:()=>o,toc:()=>d});var o=n(9344),r=n(4848),a=n(8453);const c={title:"Double byte and PHP (unicode problems)"},s=void 0,i={authorsImageUrls:[]},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"A while back I ran into a problem with PHP, how can I read in files that have double byte (unicode) characters and display them in a form that any browser can read. Most programming languages don't handle these characters very well, and end up with non sense instead of passing through the correct text."}),"\n","\n",(0,r.jsx)(t.p,{children:"This function should be able to strip out any unicode characters from text and return them as html entities (something none of the core PHP functions are able to do)."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'function removeuni($content){\npreg_match_all("/[\\x{90}-\\x{3000}]/u", $content, $matches);  \n\nforeach($matches[0] as $match){\n$content = str_replace($match, mb_convert_encoding($match, "HTML-ENTITIES","UTF-8&#8243;), $content);\n}  \n\nreturn $content;\n}\n'})})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>s});var o=n(6540);const r={},a=o.createContext(r);function c(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),o.createElement(a.Provider,{value:t},e.children)}},9344:e=>{e.exports=JSON.parse('{"permalink":"/2006/11/02/double-byte-and-php-unicode-problems","source":"@site/blog/2006-11-02-double-byte-and-php-unicode-problems.mdx","title":"Double byte and PHP (unicode problems)","description":"A while back I ran into a problem with PHP, how can I read in files that have double byte (unicode) characters and display them in a form that any browser can read. Most programming languages don\'t handle these characters very well, and end up with non sense instead of passing through the correct text.","date":"2006-11-02T00:00:00.000Z","tags":[],"readingTime":0.57,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Double byte and PHP (unicode problems)"},"unlisted":false,"prevItem":{"title":"MySQL and Redhat Enterprise Linux 4","permalink":"/2006/12/01/mysql-and-redhat-enterprise-linux-4"},"nextItem":{"title":"Google datacenter check","permalink":"/2006/11/02/google-datacenter-check"}}')}}]);