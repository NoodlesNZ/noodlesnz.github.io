"use strict";(self.webpackChunknoodles=self.webpackChunknoodles||[]).push([[7545],{5343:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>s,metadata:()=>n,toc:()=>a});var n=o(9927),r=o(4848),i=o(8453);const s={title:"Copy changed files from CVS repository"},c=void 0,l={authorsImageUrls:[]},a=[];function p(e){const t={code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"While converting my cvs repositories to git I needed to copy all the changed files from my working directory into a temp directory and then into my git working dir. This was the solution that I came up with:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"cvs -qn update -d 2>/dev/null | grep '^[M|\\?|P] ' | awk '{print $2}' > files.list while read file; do cp -r -f --parents \"$file\" /tmp/dest/; done < files.list\n"})}),"\n",(0,r.jsx)(t.p,{children:"Basically, cvs -qn update -d does a mock update (doesn't change files), piped to grep to only list the changed files, use awk to exclude the M, P, ? etc, output to a file."}),"\n",(0,r.jsx)(t.p,{children:"Loop over the lines in the new file using the cp --parents to preserve directory structure"})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>s,x:()=>c});var n=o(6540);const r={},i=n.createContext(r);function s(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(i.Provider,{value:t},e.children)}},9927:e=>{e.exports=JSON.parse('{"permalink":"/2012/03/14/copy-changed-files-from-cvs-repository","source":"@site/blog/2012-03-14-copy-changed-files-from-cvs-repository.mdx","title":"Copy changed files from CVS repository","description":"While converting my cvs repositories to git I needed to copy all the changed files from my working directory into a temp directory and then into my git working dir. This was the solution that I came up with:","date":"2012-03-14T00:00:00.000Z","tags":[],"readingTime":0.57,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Copy changed files from CVS repository"},"unlisted":false,"prevItem":{"title":"Innodb Recovery","permalink":"/2013/01/15/innodb-recovery"},"nextItem":{"title":"apr-utils 1.4.1 rpmbuild error (seg fault)","permalink":"/2012/02/22/apr-utils-1-4-1-rpmbuild-error-seg-fault"}}')}}]);