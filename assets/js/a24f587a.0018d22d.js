"use strict";(self.webpackChunknoodles=self.webpackChunknoodles||[]).push([[9626],{5474:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>p,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var t=s(5893),o=s(1151);const a={slug:"speed-up-jenkins-phpcs-php-codesniffer",title:"Speed up Jenkins phpcs (PHP CodeSniffer)"},r=void 0,i={permalink:"/blog/speed-up-jenkins-phpcs-php-codesniffer",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2015-07-08-speed-up-jenkins-phpcs-php-codesniffer.mdx",source:"@site/blog/2015-07-08-speed-up-jenkins-phpcs-php-codesniffer.mdx",title:"Speed up Jenkins phpcs (PHP CodeSniffer)",description:"PHP CodeSniffer in our Jenkins CI was always one of the slowest tasks as it ran across our whole code base. LB Denker from Etsy wrote a good piece of software called CSRunner which looked to solve this problem by only running phpcs on files that had changed in the last 7 days (or so). [&hellip;]",date:"2015-07-08T00:00:00.000Z",formattedDate:"July 8, 2015",tags:[],readingTime:1.075,hasTruncateMarker:!0,authors:[],frontMatter:{slug:"speed-up-jenkins-phpcs-php-codesniffer",title:"Speed up Jenkins phpcs (PHP CodeSniffer)"},unlisted:!1,prevItem:{title:"ipv6 workaround for Unifi USG on 2 Degrees UFB",permalink:"/blog/ipv6-workaround-for-unifi-usg-on-2-degrees-ufb"},nextItem:{title:"Show MySQL engine tablespace size",permalink:"/blog/show-mysql-engine-tablespace-size"}},p={authorsImageUrls:[]},l=[];function c(e){const n={p:"p",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("p",{children:"PHP CodeSniffer in our Jenkins CI was always one of the slowest tasks as it ran across our whole code base. LB Denker from Etsy wrote a good piece of software called CSRunner which looked to solve this problem by only running phpcs on files that had changed in the last 7 days (or so). [\u2026]"}),"\n",(0,t.jsxs)(n.p,{children:["PHP CodeSniffer in our Jenkins CI was always one of the slowest tasks as it ran across our whole code base. LB Denker from Etsy wrote a good piece of software called ",(0,t.jsx)("a",{href:"https://github.com/elblinkin/CSRunner",target:"_blank",children:"CSRunner"})," which looked to solve this problem by only running phpcs on files that had changed in the last 7 days (or so). It is written as a PHP script that was run from Jenkins."]}),"\n",(0,t.jsx)(n.p,{children:"I took this idea and adapted it to run in Ant. Instead of looking at files changed in x days, it looks at the checkstyle report from the last run and gets a list of files with problems. It merges this with any files that have changed since the last build. In theory it should bring the run time down (assuming you have a low number of files with problems)."}),"\n",(0,t.jsx)("script",{src:"https://gist.github.com/NoodlesNZ/ea5ab91c03f4dfb13ca0.js"}),"\n",(0,t.jsx)(n.p,{children:"I'm open to any ideas on how to improve this as I'm not that experienced with Ant."})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>i,a:()=>r});var t=s(7294);const o={},a=t.createContext(o);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);