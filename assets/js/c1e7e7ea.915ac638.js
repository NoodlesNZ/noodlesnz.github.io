"use strict";(self.webpackChunknoodles=self.webpackChunknoodles||[]).push([[5773],{4245:e=>{e.exports=JSON.parse('{"permalink":"/blog/2015/07/08/speed-up-jenkins-phpcs-php-codesniffer","source":"@site/blog/2015-07-08-speed-up-jenkins-phpcs-php-codesniffer.mdx","title":"Speed up Jenkins phpcs (PHP CodeSniffer)","description":"PHP CodeSniffer in our Jenkins CI was always one of the slowest tasks as it ran across our whole code base. LB Denker from Etsy wrote a good piece of software called CSRunner which looked to solve this problem by only running phpcs on files that had changed in the last 7 days (or so). It is written as a PHP script that was run from Jenkins.","date":"2015-07-08T00:00:00.000Z","tags":[],"readingTime":0.775,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Speed up Jenkins phpcs (PHP CodeSniffer)"},"unlisted":false,"prevItem":{"title":"ipv6 workaround for Unifi USG on 2 Degrees UFB","permalink":"/blog/2018/09/20/ipv6-workaround-for-unifi-usg-on-2-degrees-ufb"},"nextItem":{"title":"Show MySQL engine tablespace size","permalink":"/blog/2014/10/22/show-mysql-engine-tablespace-size"}}')},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(6540);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}},9587:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>h});var s=t(4245),o=t(4848),i=t(8453);const r={title:"Speed up Jenkins phpcs (PHP CodeSniffer)"},a=void 0,l={authorsImageUrls:[]},h=[];function p(e){const n={a:"a",p:"p",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["PHP CodeSniffer in our Jenkins CI was always one of the slowest tasks as it ran across our whole code base. LB Denker from Etsy wrote a good piece of software called ",(0,o.jsx)(n.a,{href:"https://github.com/elblinkin/CSRunner",children:"CSRunner"})," which looked to solve this problem by only running phpcs on files that had changed in the last 7 days (or so). It is written as a PHP script that was run from Jenkins."]}),"\n",(0,o.jsx)(n.p,{children:"I took this idea and adapted it to run in Ant. Instead of looking at files changed in x days, it looks at the checkstyle report from the last run and gets a list of files with problems. It merges this with any files that have changed since the last build. In theory it should bring the run time down (assuming you have a low number of files with problems)."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://gist.github.com/NoodlesNZ/ea5ab91c03f4dfb13ca0",children:"build.xml"})}),"\n",(0,o.jsx)(n.p,{children:"I'm open to any ideas on how to improve this as I'm not that experienced with Ant."})]})}function c(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}}}]);